[{
  "EC2.AutoScalingGroupName": "^eks-.+",
  "EC2.InstanceId": "^i-[A-Za-z0-9]{17}$",
  "EKS.Cluster": "^{{platformInfo}}$",
  "Environment": "^eks:{{platformInfo}}/{{appNamespace}}$",
  "K8s.Namespace": "^{{appNamespace}}$",
  "K8s.Node": "^i-[A-Za-z0-9]{17}$",
  "K8s.Pod": "^sample-app-deployment-{{testingId}}(-[A-Za-z0-9]*)*$",
  "K8s.Workload": "^sample-app-deployment-{{testingId}}$",
  "PlatformType": "^AWS::EKS$",
  "Service": "^{{serviceName}}$",
  "Operation": "GET /remote-service",
  "OTelLib": "^AwsSpanMetricsProcessor$",
  "Version": "^1$",
  "aws.span.kind": "^LOCAL_ROOT$",
  "host.name": "^ip(-[0-9]{1,3}){4}\\.ec2\\.internal$"
},
{
  "EC2.AutoScalingGroupName": "^eks-.+",
  "EC2.InstanceId": "^i-[A-Za-z0-9]{17}$",
  "EKS.Cluster": "^{{platformInfo}}$",
  "Environment": "^eks:{{platformInfo}}/{{appNamespace}}$",
  "RemoteEnvironment": "^eks:{{platformInfo}}/{{appNamespace}}$",
  "K8s.Namespace": "^{{appNamespace}}$",
  "K8s.Node": "^i-[A-Za-z0-9]{17}$",
  "K8s.Pod": "^sample-app-deployment-{{testingId}}(-[A-Za-z0-9]*)*$",
  "K8s.Workload": "^sample-app-deployment-{{testingId}}$",
  "PlatformType": "^AWS::EKS$",
  "Service": "^{{serviceName}}$",
  "Operation": "GET /remote-service",
  "OTelLib": "^AwsSpanMetricsProcessor$",
  "Version": "^1$",
  "RemoteService": "{{remoteServiceDeploymentName}}",
  "RemoteOperation": "GET /healthcheck",
  "aws.span.kind": "^CLIENT$",
  "host.name": "^ip(-[0-9]{1,3}){4}\\.ec2\\.internal$"
}]